Log of different Code Versions of branch V2.1.2.x 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%% CHANGES TO EXISTING CODE %%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Postprocessing now also uses the costaropts structure function
2) contplot_gatekeeper: Deleted line 18 which checked that option is a structure 
						Changed line 27 so that gatekeeper also accepts 'costaropts' as fieldname. 
						Checking in line 34, that costaropts structure function was used.
3) solplot_gatekeeper: Deleted line 18 which checked that option is a structure 
						Changed line 27 so that gatekeeper also accepts 'costaropts' as fieldname. 
						Checking in line 34, that costaropts structure function was used.	
4) solget_gatekeeper:  Deleted line 18 which checked that option is a structure 
						Changed line 27 so that gatekeeper also accepts 'costaropts' as fieldname. 
						Checking in line 34, that costaropts structure function was used.
5) check_fields:		Added code so that check_fields ignores the "costaropts" field in the structs to be checked. This is important, since the
						contplot, solplot, getsol function do not remove the costaropts field in the structure. m_gatekeeper does this since the 
						value is not assigned to any property in the classes, as the updateoption function does.

Plotting during continuation:
6) contplot_gatekeeper:	Does now also accept the option "index".
						Added to options_allowed_fieldnames in line 26.		
						Added a check for the index in line 56.
7) contplot:			Since index is now a field, deleted line 84.
					    Now also accepts a color statement.
					    Changes in line 72. 
8) solplot_gatekeeper:  Now accepts a color statement.
9) solplot:				Now accepts a color statement.
10) Solution 			Now has the custom_color and set_plot_color methods as well as a plot_color property
11) Continuation		Now has the method plot_contplot; has now a "p_plot" property
12) s_CON_gatekeeper    Checks the plot option

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.2b
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Continuation class: 	Numerous changes
						p_y0 and p_dy0 renamed into y0 and dy0
						error_control method added
						
2) check_data:			Now accepts "positive" and "negative" as data_value requirements

3) SolutionType: 		property error_control added with the default value 0.  
4) Solution-Subclasses:	The changes CON.p_y0 --> CON.y0 CON.p_dy0 --> CON.dy0 also effects the IF_arch_data of EVERY Solution subclass 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) initial_solution: 	Added error_control to the initial_solution function

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Continuation: 	Added step_width_limit as a parameter
					Added display as a parameter; added continuation plotting in Continuation class

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.8
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Changed SolutionType to ApproxMethod (concerns class and its subclasses)
2) Changed ST identifier (for SolutionType) to AM (for Approximation Method)
3) changed opt_sol_method to opt_approx_method
4) changed opt_sol.sol_method to opt_sol.approx_method

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.11
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1)  Changed initial_solution adding the stability feature
2)	Changed call to IF_arch_init_data method by adding the "added_output" variable.
2)  Added multipliers, stable_1, stable_0 properties and bifurcation_stability method to Continuation class
3)	m_continuation
	- Added call to bifurcation_stability to m_continuation method
	- Allquating the p_stable_0 with value from intial_solution
	- Added iteration of p_stable_1/0 to iterate_data
	- Adapted stopping criteria and adapted the reduction of step_width in case of failed Newton iterations 
4)	Changed all IF_arch_init_data methods for all Solution classes (except QPS) by adding multipliers and stable arguments.
5)  Changed all IF_arch_data methods by adding multipliers and stable.
6) Gatekeeper
	- added the key "stability" to opt_sol
	- added the opt_stability structure
	- adapted all test_case files
7) setSolver is now a general function
	- function calls adapted in AM_PS_Shoot and AM_QPS_Shoot
8) solplot, contplot, solplot_gatekeeper, contplot_gatekeeper:
	- Added a linestyle argument
9) plot_contplot:
	- dashed linestyle is applied, if solution is unstable.
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.13
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Continuation class: Changed computation of arclength computation: 
	Now computed according to the euclidean difference between two cuve points
	y_0 and y_1
	--> introduced variables p_arcl_0 and p_arcl_1
	--> wrote custom get method for p_arcl_1, which always return the correct current value for p_arcl_1
	--> added p_arcl_1 and _0 to the iterate_data file
	--> Changed IF_update_sol_dim method: Can now also be used within iteration process of bifurcation parameters

2) Solution class: 
	--> All solution subclasses now use the p_arcl_1 property to store the current argclength

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.13c
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) Solution subclasses:
	S.IF_arch_bfp_data(obj,DYN,AM) is a method for saving the bifurcation point into the solution object
	--> Added an abstract method to the superclass Solution
	--> All solution subclass must now have an IF_arch_bfp_data method, which stores the solution curve data of the iterated bifurcation point

test_cases: 
	--> adapted the test cases so that they also compute the stability and iterate the bifurcation point (if there are any)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%% NEW CODE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.2b
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) ST_PS_FGM:		Added IF_decrease_descretization, IF_increase_descretization, IF_update_sol_dim
					New set methods: A change in hmatrix and n_fft now automatically update p_chf, p_arg_val, p_n_hh
					Added the variables, error_limit, error_control, n_hh_max and the according gatekeeper checks


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
V2.1.2.3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) ST_PS_FGM:		Added p_hmatrix_old, which stores the last state of the hmatrix within the error_control loop

V2.1.2.4
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1) ST_QPS_FGM:		Changing the set methods for hmatrix and n_fft
					Added necessary alloquation of p_arg_val, hmatrix, n_fft in the constructor	
					Added error_limit, ec_iter_max, n_hh_max as properties and the query in the gatekeeper
					Added the methods sort_guess_FC, residuum_projection, IF_update_sol_dim, IF_increase_descretization, IF_decrease_descretization, IF_estimate_error
					
					
					
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%					
V2.1.2.4 - V2.1.2.13
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Added the stability class and subclasses
