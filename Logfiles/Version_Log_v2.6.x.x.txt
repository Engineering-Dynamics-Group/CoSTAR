--------------------------------------------
------------------ v2.6.1b -----------------
--------------------------------------------

@ST_PS_SHM:

    - PS_test_functions:
        --> Line 31 commented
        --> Line 32 - 34 added         Warning if test functions produce imaginary number



--------------------------------------------
------------------ v2.6.2 ------------------
--------------------------------------------

Allowed value 'step_control' of opt_cont.display renamed to 'step_control_info' in order to not being confused with field opt_cont.step_control.
Changes affect:

    @Continuation:
        - check_limits (line 13)
        - s_CON_gatekeeper (line 15 added and 37 adapted)
        - s_help_opt_cont (lines 76 and 77)
        - stepcontrol (line 175)


----------

All "example_text" within the costarhelp display texts changed to ''example_text'' (which is displayed as 'example_text') to reflect the correct data type (char).
Changes affect:

	@Continuation:				@DynamicalSystem:			@Solution:
	    - s_help_opt_cont 		    - s_help_opt_sol		    - s_help_contplot
					    	        - s_help_system		    	- s_help_solget
									    		                - s_help_solplot

	@AM_PS_FDM:				                    @AM_PS_FGM:				                    @AM_PS_SHM:
	    - s_help_opt_approx_method_PS_FDM	        - s_help_opt_approx_method_PS_FGM	        - s_help_opt_approx_method_PS_SHM

	@AM_QPS_FDM:				                @AM_QPS_FGM:				                @AM_QPS_SHM
	    - s_help_opt_approx_method_QPS_FDM	        - s_help_opt_approx_method_QPS_FGM	        - s_help_opt_approx_method_QPS_SHM
											        - s_help_opt_init_QPS_SHM
	    
	@Stability_EQ				                @Stability_PS_SHM			                @Stability_QPS_SHM
	    - s_help_opt_stability_EQ	    	        - s_help_opt_stability_PS_SHM    	        - s_help_opt_stability_QPS_SHM


----------

The performance of the solution evaluations during a continuation (to create the bifurcation diagram) has been improved. 
Now, only the latest solution is evaluated (previously the two latest solutions), while the axes values of the old solution are stored in a property of @Continuation.
Changes affect:

	@Continuation:
	    - Continuation:
		    --> Private property "p_axes_values_old" added (line 66)
	    - plot_contplot:
		    --> The property "p_axes_values_old" stores the the axes values of the old solution (lines 30, 39, 51, 60, 63, 68, 71, 76 and 79)
		    --> The options structure for all contplot calls (except for the call when the continuation has just started) include the field 'axes_values_old', 
		        which stores the axes values of the old solution (lines 37, 49, 58, 61, 66, 69, 74 and 77)

	@Solution:
	    - contplot:
		    --> The method "contplot_gatekeeper" is skipped when the options-field 'axes_values_old' is present (lines 61 - 63)
		    --> solget_options.index is updated when the options-field 'axes_values_old' is present (lines 97 - 102)
		    --> Output arguments mu and s_out must be corrected when the options-field 'axes_values_old' is present (lines 168 - 171)
        - solget:
		    --> The methods "solget_gatekeeper" and "solget_up_index" are skipped when the options-field 'axes_values_old' is present (lines 90 - 93)
		

----------

@Solution:

    - s_help_solplot:
        --> Info text of options field 'color' corrected (line 59)

    - s_help_contplot:
        --> Info text of options field 'zaxis' adapted (lines 12 and 18)
        --> Info text of options field 'color' adapted (line 32)

    - solplot:
        --> When plotting another solution in already existing figure, the legend entry is added to already existing legend now
        --> Lines 186, 220, 288, 363 added and lines 205, 276, 309, 381 changed


@ST_PS_SHM:

    - PS_test_functions:
        --> Line 37 removed



--------------------------------------------
------------------ v2.6.3 ------------------
--------------------------------------------

Solution property "flag" renamed to "stopping_flag" to add clarity. Moreover, the property is now allocated by a text explaining the cause of termination.
Changes affect:

	@Continuation:
		- check_limits:
			--> "obj.p_flag" renamed to "obj.p_stopping_flag" (lines 22, 27 and 32)
		- Continuation:
			--> Property "p_flag" renamed to "p_stopping_flag" (line 37)
		- m_continuation:
			--> "obj.p_flag" renamed to "obj.p_stopping_flag" (lines 45, 72 and 90)
			--> switch added to set the texts for Solution property "stopping_flag" (lines 124 - 133)

	@Solution:
		- Solution:
			--> Property "flag" renamed to "stopping_flag" (line 18)

	Functions:
		- initial_solution:
			--> "S.flag" renamed to "S.stopping_flag", corresponding values replaced by text (lines 30, 33 and 36)


----------

Computation and storing of eigenvectors added for equilibrium solutions (eigenvectors of Jacobian) and periodic solutions (eigenvectors of monodromy matrix).
Changes affect:

	Functions:
		- initial_solution:
			--> "vectors" added to output arguments of method "ST.calc_stability(y,J)" (line 101)
			--> "vectors" added as fifth element of "added_output" (line 105)

	@Continuation:
		- bifurcation_stability:
			--> "obj.p_vectors" added to output arguments of method "ST.calc_stability(obj.p_y1,obj.p_J1)" (line 14)
			--> "obj.p_vectors_bfp" added to output arguments of method "ST.calc_stability(obj.p_y_bfp,obj.p_J_bfp)" (line 55)
		- Continuation:
			--> Properties "p_vectors" and "p_vectors_bfp" added (lines 48 and 54)
		- plot_contplot:
			--> Line is plotted in dark grey (instead of black) when stability changes but the bifurcation point is not iterated (lines 46 and 50)

	@Solution:
		- contplot:
			--> Line is plotted in dark grey (instead of black) when stability changes but the bifurcation point is not iterated (lines 242, 269 and 277)
		- s_help_contplot:
			--> Help text of field "color" adapted (line 32)
		- Solution:
			--> Property "vectors" added (line 30)
			--> Attribute of property "plot_color" changed to "Hidden = true" in order to make it accessible from the plot_contplot method (line 40)

	@SOL_EQ:
		- SOL_EQ:
			--> Storing of computed vectors added to methods "IF_arch_init_data", "IF_arch_data" and "IF_arch_bfp_data" (lines 25, 43 and 62)

	@SOL_PS_FDM:
		- SOL_PS_FDM:
			--> Storing of computed vectors added to methods "IF_arch_init_data", "IF_arch_data" and "IF_arch_bfp_data" (lines 49, 81 and 109)

	@SOL_PS_FGM:
		- SOL_PS_FGM:
			--> Storing of computed vectors added to methods "IF_arch_init_data", "IF_arch_data" and "IF_arch_bfp_data" (lines 49, 102 and 138)

	@SOL_PS_SHM:
		- SOL_PS_SHM:
			--> Storing of computed vectors added to methods "IF_arch_init_data", "IF_arch_data" and "IF_arch_bfp_data" (lines 31, 62 and 87)

	@SOL_QPS_SHM:
		- SOL_QPS_SHM:
			--> Storing of computed vectors added to methods "IF_arch_init_data", "IF_arch_data" and "IF_arch_bfp_data" (lines 39, 65 and 97)

	@Stability:
		- check_stability_values:
			--> "vectors" added to input and output arguments (line 12)
			--> "vectors" added to be set as NaN-matrix (line 17)
		- sort_mulitpliers:
			--> Method adapted to be able to sort vectors (if provided) corresponding to sorted multipliers. 
			    If vectors are not provided as additional input argument, only multipliers are sorted.
			    Sorted vectors are returned if additional output argument was specified at method call.
		- Stability:
			--> "vectors" added to input and output arguments of method "check_stability_values" (line 26)
			--> Definition of method "sort_multipliers" adapted (line 27)

	@ST_EQ:
		- EQ_calc_stability:
			--> "vectors" added to output arguments (line 14)
			--> Computation of eigenvectors of Jacobian added (line 19)
			--> Call of method "obj.sort_multipliers" adapted to sort eigenvectors as well (line 21)
			--> Eigenvalue is counted as unstable if real part > 10*eps (previously > 0) to take numerical inaccuracies into account (line 23)
			--> catch-statement: "multipliers" are now set as NaN-vector (previously NaN-matrix) (line 26)
			--> catch-statement: "vectors" added to be set as NaN-matrix (line 27)
			--> "vectors" added to input and output arguments of method "obj.check_stability_values" (line 33)
		- ST_EQ:
			--> "vectors" added to output arguments of method "EQ_calc_stability" (line 23)

	@ST_PS_SHM:
		- PS_SHM_calc_stability_non_auto:
			--> "vectors" added to output arguments (line 15)
			--> Computation of eigenvectors of monodromy matrix added (line 48)
			--> Call of method "obj.sort_multipliers" adapted to sort eigenvectors as well (line 49)
			--> Multipliers counted as unstable if "cm > 10*eps" (previously > 0) to take numerical inaccuracies into account (line 53)
			--> "vectors" added to input and output arguments of method "obj.check_stability_values" (line 56)
		- PS_SHM_calc_stability_auto:
			--> "vectors" added to output arguments (line 15)
			--> Computation of eigenvectors of monodromy matrix added (line 48)
			--> Call of method "obj.sort_multipliers" adapted to sort eigenvectors as well (line 49)
			--> Multipliers counted as unstable if "cm > 10*eps" (previously > 0) to take numerical inaccuracies into account (line 53)
			--> "vectors" added to input and output arguments of method "obj.check_stability_values" (line 56)
		- ST_PS_SHM:
			--> "vectors" added to output arguments of method "PS_SHM_calc_stability_non_auto" (line 38)
			--> "vectors" added to output arguments of method "PS_SHM_calc_stability_auto" (line 39)

	@ST_QPS_SHM:
		- QPS_SHM_calc_stability:
			--> "vectors" added to output arguments (line 15)
			--> Multipliers counted as unstable if "multipliers>10*eps" (previously > 0) to take numerical inaccuracies into account (line 120)
			--> "vectors" set as empty array since there are no eigenvectors to be computed (line 128)
			--> "vectors" added to input and output arguments of method "obj.check_stability_values" (line 130)
		- ST_PS_SHM:
			--> Method definition of "QPS_SHM_calc_stability" added (line 39)


----------

@costarhelp:

	- s_disp_out_help_struct:
		--> Headers of first two columns changed to "field name" and "allowed field values" (line 19)


@Solution:

	- s_help_contplot:
		--> Descriptions adapted


@SOL_PS_FDM:

	- evalsol_hypertime:
		--> Bugfix: "~isempty" in line 23 changed to "isfield"


@SOL_QPS_FDM:

	- evalsol_hypertime:
		--> Bugfix: "~isempty" in line 29 changed to "isfield"
		--> if...else condition for n_int_2 added (similar to getting n_int in the periodic case) (lines 34 - 38)

	- evalsol_time:
		--> Bugfix: "~isempty" in line 22 changed to "isfield"
		--> if...else condition for n_int_2 added (similar to evalsol_hypertime, see above) (lines 27 - 31)



--------------------------------------------
----------------- v2.6.3.1 -----------------
--------------------------------------------

Version compatibility fix: cell of empty array returned error in version R2021 of MATLAB, which could occur in solplot.

@Solution:

    - solplot:
        --> Old Legend is got in line 171 now without cell() function
        --> Setting and getting of the legend removed from all switch cases (lines 186, 201 - 205, 220, 272 - 276, 288, 305 - 309, 363, 377 - 381)
        --> Legend is now set by new code in ines 370 - 377 (line numbers correspond to after removal of code described above)



--------------------------------------------
------------------ v2.6.4 ------------------
--------------------------------------------
  
The postprocessing methods contplot, solget and solplot now return a struct instead of multiple output arguments.
Changes affect:

    @Continuation:
        - plot_contplot:
            --> Output arguments of contplot adapted (lines 23, 32, 44, 53, 56, 61, 64, 69 and 72)
            --> Setting of obj.p_axes_values_old and of tmp adapted to fit output structure of contplot (lines 24, 33, 45, 54, 57, 62, 65, 70, 73 and 79)

    @Solution:
        - contplot:
            --> Explanation text adapted (lines 5 - 56)
            --> Output argument changed from "varargout" to struct "output" (lines 59, 316 and 317, former line 65 removed)
            --> Output argument of solget as well as section "Get the data" adapted (lines 98 - 103)
        - solget:
            --> Explanation text adapted (lines 4 - 85)
            --> Output arguments changed to struct "output" (lines 88, 116, 120, 124 and 181 - 183, former line 105 removed)
            --> Output arguments of evalsol_...-methods adapted (lines 115, 119 and 123)
            --> Initialisation of s_out added (lines 146, 151 and 156)
        - solplot:
            --> Explanation text adapted (lines 2 - 110)
            --> Output argument changed from "varargout" to struct "output" (lines 113, 193 - 195, 229 - 232, 247 - 249, 339 - 341 and 375 - 377)
            --> Output argument of solget methods adapted (lines 164 - 168, 202 - 205, 267 - 271 and 347 - 251)
            --> case 'trajectory': Preallocation of idx_mu, x and z is now done before if...else condition,  (lines 207 - 209)
            --> case 'trajectory': s_traj renamed to s (lines 203, 208 - 209, 215, 217 - 219 and 239 - 240)

    test:
        - test_EQ_pitchfork:
            --> Output arguments of contplot and name of corresponding options struct adapted (lines 40 - 43)

    test\01postprocessing:
        - benchmark_postprocess_equilibrium:
            --> Output arguments of contplot and name of corresponding options struct adapted (lines 5 - 15)
        - benchmark_postprocess_periodic:
            --> Output arguments of solget, contplot and solplot as well as names of corresponding options structs adapted (lines 8 - 74)
        - benchmark_postprocess_quasiperiodic:
            --> Output arguments of solget, contplot and solplot as well as names of corresponding options structs adapted (lines 8 - 80)

          
----------  

Default resolution of 50 for quasi-periodic solutions and of 200 for periodic solutions now affects continuation as well as postprocessing.

    @Continuation:
        - plot_contplot:
            --> Definition of default resolution removed (former lines 10 - 15)
            --> Field 'resolution' in option structs removed (lines 22, 31, 43, 52, 55, 60, 63, 68, 71)

    @Solution:
        - s_help_contplot:
            --> Description of default value adapted (line 23)
        - s_help_solget:
            --> Description of default value adapted (line 42)
        - s_help_solplot:
            --> Description of default value adapted (line 51)
        - solget:
            --> Definition of default resolution added/modified (lines 102 - 106)
  
          
----------  

It is now prohibited for the user to use solget for equilibrium solutions (call of solget from contplot is still available).

    @Solution:
        - contplot:
            --> Field 'call_from_contplot' is added to solget_options to tell solget that it was called from contplot (line 77)
        - solget_gatekeeper:
            --> Lines 26 - 31 added

    @SOL_EQ:
        - evalsol_frequency:
            --> Deleted since this method has no use anymore
        - evalsol_time:
            --> Deleted since this method has no use anymore
        - SOL_EQ:
            --> Postprocessing methods evalsol_time and evalsol_frequency removed from protected methods as they have been deleted (former lines 78 and 80)
        

    test\01postprocessing:
        - benchmark_postprocess_equilibrium:
            --> Variables n and index as well as section for solget removed (former lines 3 - 17)


----------  
    
Functions:

    - costarFFT:
        --> Description, error message and comments improved
        --> Section "Interpolation of ODE data" adapted. Last element of Zi is not removed anymore when Zi has uneven number of elements
  
          
----------  

Tutorials:

    - Tutorial_Postprocessing:
        --> Split into Tutorial_contplot, Tutorial_solget and Tutorial_solplot

    - Tutorial_contplot:
        --> Tutorial added and finished

    - Tutorial_solget:
        --> Tutorial added and finished

    - Tutorial_solplot:
        --> Tutorial added and finished  


---------- 

Test:

    - benchmark_postprocess_periodic: 
        --> Various adjustments of the option structures

    - benchmark_postprocess_quasiperiodic: 
        --> Various adjustments of the option structures


----------

@costarhelp:

    - solget: 
        --> Solution space "solution" in description removed (lines 14 and 15)


@Solution:

    - contplot_gatekeeper 
        --> Gatekeeper texts for field 'color' adapted (lines 70 and 73)

    - s_help_contplot:
        --> Variously improved and updated

    - s_help_solplot:
        --> Variously improved and updated

    - solget: 
        --> Method output arguments adapted and varargout code lines commented (lines 87, 105 ,112, 117, 123, 174 and 175)

    - solget_gatekeeper: 
        --> Renamed trajectory_[...]_fieldnames to hypertime_[...]_fieldnames (lines 123 - 125)
        --> Field 'resolution' must be even number now when frequency solution space is selected (lines 134 - 139)

    - solplot: 
        --> Solutions in trajectory solution space are now returned for all indices 
            (lines 227 - 229 and 254 - 255 added, lines 231 - 233, 236, 257 - 258 and 261 adapted)
        --> ylabel of frequency plots "\mathcal{F} (z_i)" replaced by "\mathcal{F}_i (\omega)" (line 381)

    - solplot_gatekeeper:
        --> Array size of field 'color' is now checked when data type is double (line 68)
        --> Gatekeeper texts for field 'color' adapted (lines 70, 73 and 141)


@SOL_EQ:

    - evalsol_hypertime: 
        --> Returned hypertime array is empty now (line 20) 
        --> Method does not call evalsol_time anymore (lines 18 and 19)
