--------------------------------------------
----------------- v2.8.0.4 -----------------
--------------------------------------------

Example files adapted to QPS_SHM now also receiving a fourier series

    @Tutorials
        - Tutorial_QPS_SHM
            --> for each example fourier coefficients added
            --> for each example new/additional opt_init for fourier-coeffients added
            --> for each old opt_init for time integration removed
            --> multiple changes in comments regarding the afformentioned changes
            --> multiple changes in comments updateing the method from FDM to SHM due to copying 

        - Example_QPS_SHM 
            --> for each fourier coefficients added
            --> for each new/additional opt_init for fourier-coeffients added
            --> for each old opt_init for time integration removed

--------------------------------------------
----------------- v2.8.0.3 -----------------
--------------------------------------------

Test files adapted to QPS_SHM now also receiving a fourier series

    @test
        - test_SHM_QPS_Duffing
        - test_SHM_QPS_vdP
        - test_SHM_QPS_cvdP 
            --> for each fourier coefficients added
            --> for each new/additional opt_init for fourier-coeffients added
            --> for each old opt_init for time integration removed

    @AM_(Q)PS_FDM
        - getWeights
            --> Line 155 (273) commented (Blows out RAM)
            --> Line 156 (274) added Sparse defined before Kronecker-Product

--------------------------------------------
----------------- v2.8.0.3 -----------------
--------------------------------------------

QPS_SHM can now be initilized with a first order fourier series. The time integration has been removed.

    @AM_QPS_SHM
        - Properties:
            --> tinit, deltat, t0 removed
            --> c0, c1, s1 added, store values for first order, two dimensional fourier series
        - getIV:
            --> Mutiple changes
                - else loop removed which did the time integration
            --> Lines 65-127 else loop added which extracted initial values from fourier series
        - s_QPS_SHM_gatekeeper:
            --> Multiple changes
                - optional fields 
                    o added 'c0', 'c1', 's1'
                    o removed 'tinit', 'deltat', 't0'
                - Corresponding checks removed/added

--------------------------------------------
----------------- v2.8.0.2 -----------------
--------------------------------------------

New method 'initial_slope' in Continuation, summarizes the code added in v2.8.0.1 m_continuation in method

    @Continuation:
        - Continuation:
            --> Line 114 ---- method 'initial_slope' added
        - direction_vector:
            --> Line 11 ----- if argument changed, true only if tangent predictor is chosen or 'use_qr' is true
            --> Line 16 ----- elseif argument changed, true if local counter  equals 1
        - m_continuation:
            --> Line 40ff --- Block removed and extracted into method 'initial_slope'
            --> Line 42 ----- Call method 'initial_slope'

--------------------------------------------
----------------- v2.8.0.1 -----------------
--------------------------------------------

Secant predictor now works for the initial solution as well and doesn't use a qr decomposition anymore

    @Continuation:
        - Continuation:
            --> Line 86 ---- p_initial_slope ---- stores intial slope in case of secant predictor
            --> Line 87 ---- p_use_qr ----- logical value set true if calculation of second curve point fails, then use qr decomposition instead
        - direction_vector:
            --> Line 10 ----- arguments of if statement changed
            --> Lines 15-17 added ----- use initial slope if secant predictor is used and in first loop
        - m_continuation: 
            --> Lines 41-63 added ---- if loop to calculate second curve point for initial slope

    @test:
        - test_FDM_PS_harmonic:
            --> Line 23 ----- option 'cont' set to 'on', resolved error in benchmark_postprocess_periodic


--------------------------------------------
------------------ v2.8.0 ------------------
--------------------------------------------

A log file is now created for every CoSTAR computation and the command window output was reworked. 
The latter can still be controlled via the field 'display', but it was moved to the opt_sol options structure.
    
    @DynamicalSystem:
        - DynamicalSystem:
            --> Hidden properties "display" and "create_log" added to hidden properties (lines 51 - 55)
            --> Format of ID improved (line 88)
            --> MATLAB function lastwarn is resetted in constructor now (line 90)
        - s_DYN_gatekeeper:
            --> Check for opt_sol-field 'display' added (lines 16, 19, 73 - 76, 85, 114 and 196)
        - s_help_opt_sol:
            --> Info text for field 'display' added (lines 48 - 56)

    @Continuation:
        - bifurcation_stability:
            --> Method now returns obj (line 10)
            --> Warnings reworked, command window output as well as log file entries and saving of warnings added when computation failed (lines 86 - 92 and 104 - 108)
        - check_limits:
            --> DymamicalSystem object added to input arguments (line 7)
            --> Complete rework of command window output, log file entries and saving of stopping messages added (lines 14 - 55, 62 - 65, 70 - 73, 78 - 81 and 84)
        - Continuation:
            --> Property "display" removed (former line 10)
            --> Private property "p_last_msg" added to store command window messages (line 60)
            --> DymamicalSystem object added to input arguments of check_limits and stepcontrol (lines 113 and 115)
        - error_control:
            --> Command window output reworked and log file entries added (lines 32 - 36 and 45 - 49)
        - m_continuation:
            --> Command window output, log entries and saving of warnings and stopping messages added (lines 27 - 37, 58 - 63, 90 - 96, 102 - 104, 118 - 123 and 159 - 169)
            --> DymamicalSystem object added to input arguments of stepcontrol and check_limits (lines 50 and 149)
        - s_CON_gatekeeper:
            --> 'display' removed from allowed fieldnames and related check deleted (lines 10, 15 and former line 37)
        - s_help_opt_cont:
            --> Info text for field 'display' removed (former lines 76 and 77)
        - stepcontrol:
            --> DymamicalSystem object added to input arguments (line 5)
            --> Command window output reworked and log file entries added (lines 16 - 20, 129 and 176 - 192)

    @AM_PS_FDM:
        - AM_PS_FDM:
            --> Property p_weights renamed to weights and moved to normal properties (not private anymore) (line 13)
        - getWeights:
            --> Property p_weights adapted to weights (line 163)
            --> Command window output disabled / commented (lines 165 - 176)
        - PS_FDM_residuum:
            --> Property p_weights adapted to weights (line 32)

    @AM_QPS_FDM:
        - AM_QPS_FDM:
            --> Properties p_weights_i renamed to weights_i (i \in {1,2}) and moved to normal properties (not private anymore) (lines 18 and 19)
        - getWeights:
            --> Properties p_weights_i adapted to weights_i (i \in {1,2}) (lines 282 and 283)
            --> Command window output disabled / commented (lines 285 - 296)
        - PS_FDM_residuum:
            --> Properties p_weights_i adapted to weights_i (i \in {1,2}) (lines 41 and 43)

    @Solution:
        - Solution:
            --> Property "warnings = cell(0,0)" added to store all warnings when CoSTAR is running (line 33)

    @SOL_PS_FDM:
        - SOL_PS_FDM:
            --> Properties "local_gridpoint_indices" and "local_gridpoint_weights" added (lines 9 and 10)
            --> Storing of AM_PS_FDM properties "points" and "weights" to new SOL_PS_FDM properties added (lines 49 and 50)

    @SOL_QPS_FDM:
        - SOL_QPS_FDM: 
            --> Properties "local_gridpoint_indices_i" and "local_gridpoint_weights_i" (i \in {1,2}) added (lines 9 - 12)
            --> Storing of AM_QPS_FDM properties "points_i" and "weights_i" (i \in {1,2}) to new SOL_PS_FDM properties added (lines 51 - 55)

    Functions:
        - check_freq:
            --> Small changes to all warning messages
        - initial_solution:
            --> Complete rework of command window output messages
            --> Log file entries and saving of warnings and stopping messages added
            --> Changes to lines 10 - 17, 40, 43, 44, 46, 47, 49, 55 - 66, 69, 77, 78, 101 - 105, 108 - 112, 116 - 120, 139, 146 - 149, 166 - 173 and 191 - 222)
        - write_log:
            --> Added

    test:
        - Changes to test files regarding field 'display': Values adapted and field moved from opt_cont to opt_sol
        - Changes to test files regarding timer: The computation time is now evaluated using a timer variable to avoid conflict with timer in write_log function

    Tutorials:
        - Description of field 'display' and reference to log file added as well as decription of command window output adapted. Changes affect:
            --> Tutorial_EQ
            --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
            --> Tutorial_QPS_FDM    --> Tutorial_QPS_FGM    --> Tutorial_QPS_SHM
        - Live scripts evaluated again to obtain the new command window output. Changes affect:
            --> Tutorial_EQ     
            --> Tutorial_Postprocessing_contplot    --> Tutorial_Postprocessing_solget      --> Tutorial_Postprocessing_solplot
          

----------  

The frequency limit can now be set by the user. Moreover, the implementation of the check in initial_solution and in m_continuation as well as the function freq_check itself were adapted.

    @DynamicalSystem:
        - DynamicalSystem:
            --> Property "freq_limit = 1e-4" added (line 32)
        - s_DYN_gatekeeper:
            --> Checks for 'freq_limit' added (lines 16, 115, 128 - 139, 209 and 230 - 241)
            --> Call of function freq_check adapted according to recent changes (lines 155, 163, 257 and 270)
        - s_help_opt_sol:
            --> Info text for field 'freq_limit' added (lines 44 - 45)
	
    @Continuation:
        - m_continuation:
            --> Position of frequency check changed
            --> Function call adapted according to recent changes

    Functions:
        - check_freq:
            --> Input arguments changed. Now there are always two: Either DynamicalSystem object and solution vector OR frequency limit and frequency(s)
            --> Output argument(s) reduced to warning message
        - initial_solution:
            --> Position of frequency check changed
            --> Function call adapted according to recent changes

    test:
        - Minor changes to test files regarding new opt_sol field 'freq_limit'

    Tutorials:
        - Description of field 'freq_check' added. Changes affect:
            --> Tutorial_EQ
            --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
            --> Tutorial_QPS_FDM    --> Tutorial_QPS_FGM    --> Tutorial_QPS_SHM

          
----------  

@DynamicalSystem:
    
    - s_help_opt_sol:
        --> Minor improvements to info texts (lines 20 - 42)


Tutorials:

    - Stability computation enabled for all examples if it was turned off and if stability computation is possible. Changes affect:
        --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
        --> Example_PS_FDM      --> Example_PS_FGM      --> Example_PS_SHM
    
    - Description of variable non_auto_freq as well as of option structs options.system and options.opt_sol improved. 
      Moreover, the description of the output figure and the line colors was moved to postprocessing section. Changes affect:
        --> Tutorial_EQ
        --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
        --> Tutorial_QPS_FDM    --> Tutorial_QPS_FGM    --> Tutorial_QPS_SHM


   
--------------------------------------------
------------------ v2.8.1 ------------------
--------------------------------------------

Bugfix: A grey line is now displayed in continuation plot when iteration of bifurcation point failed.

    @ Continuation:
        - bifurcation_stability:
            --> Variable "stability_flag" changed to property "obj.p_stability_flag" (lines 14, 17, 55, 61 and 71)
            --> Variable "p_newton_flag_bfp" changed to property "obj.p_newton_flag_bfp" (lines 52, 61 and 71)
        - Continuation:
            --> Private properties "p_stability_flag" and "p_newton_flag_bfp" added (lines 55 and 56)
        - plot_contplot:
            --> elseif condition in line 51 adapted

    @Solution:
        - contplot:
            --> numel(obj.n_unstable)(~/=)=0 changed to (~)isempty(obj.n_unstable) (lines 226 and 231)
            --> Computation of variables "idx" and "idx_stab" adapted for "else" case (lines 265 - 311)


----------  

The continuation curve is now displayed in orange when the stability computation failed.

    @Continuation:
        - Continuation:
            --> Private property "p_stability_flag_old" added (line 70)
        - iterate_data:
            --> Iteration of "p_stability_flag" added (line 16)
        - m_continuation:
            --> Initialization adapted: if condition in line 22 changed, existing code moved in new if condition to lines 24 - 27 and line 23 added
        - plot_contplot:
            --> elseif condition added to handle this case (lines 41 - 45)

    @Solution:
        - contplot:
            --> Getting the relevant stability flags added (lines 196 - 199)
            --> Setting the correct color adapted, case for orange color added (lines 244 - 250, 254 - 256 and 318 - 320)
        - s_help_contplot
            --> Info text for 'color' adapted (line 31)
        - Solution:
            --> Property "stability_flag" added (line 18)

    The stability flag is now saved in the solution objects. The required lines were added to following files:
        - SOL_EQ (lines 27, 46 and 66)
        - SOL_PS_FDM (lines 56, 88 and 117)     - SOL_PS_FGM (lines 51, 105 and 142)    - SOL_PS_SHM (lines 38, 70 and 96)
        - SOL_QPS_FDM (lines 60, 92 and 123)                                            - SOL_QPS_SHM (lines 41, 68 and 101)


----------  

A stable solution is now displayed in green. Moreover, the automatic plotting color "dark grey" for continuation plots was changed to "pale grey".

    @Continuation:
        - plot_contplot:
            --> Selection of color adapted (lines 10 - 18)
            --> "dark_grey" changed to "pale_grey" (line 53)
            --> Color 'b' changed to 'g' for the case when a bifurcation point was computed (lines 64 and 75)

    @Solution:
        - contplot:
            --> "dark_grey" changed to "pale_grey" (lines 257, 298, 304, 310, 320 and 321)
            --> Color 'b' changed to 'g' (lines 247 and 323)
        - s_help_contplot
            --> Info text for 'color' adapted (line 31)

    Tutorials:
        - Example_Postprocessing_contplot:
            --> Colour in "contplot_options_2" changed to 'y' (line 66)
            --> Value of 'index' in "contplot_options_4" changed to "185:205" (line 77)
        - Tutorial_Postprocessing_contplot:
            --> Description of field 'color' adapted
            --> Colour in "contplot_options_2" changed to 'y'
            --> Value of 'index' in "contplot_options_4" changed to "185:205"
        - Live scripts evaluated again to obtain the new command window output. Changes affect:
            --> Tutorial_EQ     
            --> Tutorial_Postprocessing_contplot    --> Tutorial_Postprocessing_solget      --> Tutorial_Postprocessing_solplot
        - Description of line colour adapted. Changes affect:
            --> Tutorial_EQ
            --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
            --> Tutorial_QPS_FDM    --> Tutorial_QPS_FGM    --> Tutorial_QPS_SHM


----------  

CoSTAR can now handle fsolve exitflags > 1. CoSTAR stopps for exitflag = 2 and issues a warning for exitflag \in {3,4}.

    @Continuation:
        - bifurcation_stability:
            --> Loop for iterating the bifurcation point is broken when fsolve returns exitflag < 1 or exitflag = 2 (lines 54 - 56)
            --> "&& (obj.p_newton_flag_bfp ~= 2)" added to if condition in line 74 for saving the bifurcation point
            --> Warning text adapted (lines 89 and 90)
        - error_control:
            --> Conditions for different exitflags added, but does not work yet, which is why most of the code is commented (lines 68 - 85)
        - m_continuation:
            --> Step control is only executed for exitflags 1, 3 and 4 (line 52)
            --> if...elseif conditions for different exitflags added and reworked (lines 90 - 99, 105, 107, 111 and 121 - 133)

    Functions:
        - initial_solution:
            --> if...elseif conditions for different exitflags added and reworked (lines 55 - 63 and 75 - 82)
            --> All warning messages are stored in a cell array now (lines 40, 77, 78, 80, 81, 92, 93, 195, 196 and 223 - 227)
            --> Conditions for different exitflags in error control added, but does not work yet, which is why most of the code is commented (lines 155 - 168)


----------  

@Continuation:

    - bifurcation_stability:
        --> Bugfix: "~isnan(obj.p_n_unstable_0)" added to if condition in line 25

    - check_limits:
        --> Bugfix: Warning messages are displayed correctly when continuation starts with warning
            * "warn_str" replaced by "delete_str_split" in line 41
            * Displaying warning messages reworked. Former lines 46 - 48 replaced by new lines 46 - 51


test:

    - cprintf:
        --> License text added from removed License.txt

    - license:
        --> Removed