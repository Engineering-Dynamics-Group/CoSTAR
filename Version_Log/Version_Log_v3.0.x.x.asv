--------------------------------------------
------------------ v3.0.1 ------------------
--------------------------------------------

Bugfixes:
    
    @Continuation:
        - s_CON_gatekeeper:
            --> opt_cont.mu_limit now must be a vector of increasing numerical values (xlim(mu_limit) does not work in contplot otherwise) (lines 26 - 30 added)

    @DynamicalSystem:
        - DynamicalSystem:
            --> Version number corrected to 3.0 (line 10)

    @SOL_QPS_FDM:
        - evalsol_hypertime: 
            --> When dim = 1, the Z coordinates are not transponsed anymore by the permute function (former line 84)
            --> An exception has been added: no permutation is required when dim = 1 (lines 84 - 88)

    @ST_PS_SHM:
        - PS_SHM_calc_stability_auto:
            --> Computation of monodromy matrix corrected: Exception for n_shoot = 1 added (lines 47 - 54)
        - PS_SHM_calc_stability_non_auto:
            --> Computation of monodromy matrix corrected: Exception for n_shoot = 1 added (lines 47 - 54)
        - s_ST_PS_SHM_gatekeeper:
            --> "opt_approx_method" corrected to "opt_stability" in lines 61 and 61

    Functions:
        - initial_solution:
            --> Spaces in "header" of CoSTAR display output adapted to new version number 3.0: two spaces have been added in line 14
        - write_log:
            --> Spaces in "header" of CoSTAR log adapted to new version number 3.0: two spaces have been added in line 72

    Tutorials:
        - Info text for new restriction of opt_cont.mu_limit (must be a vector of increasing numerical values) added to following tutorials:
            --> Tutorial_EQ
            --> Tutorial_PS_FDM     --> Tutorial_PS_FGM     --> Tutorial_PS_SHM
            --> Tutorial_QPS_FDM    --> Tutorial_QPS_FGM    --> Tutorial_QPS_SHM
          

----------  

The presentation has been updated: a slide containing publications has been added as third slide.



--------------------------------------------
------------------ v3.0.2 ------------------
--------------------------------------------

Calculation of Jacobian added to periodic shooting method.

    @Continuation:
        - bifurcation_stability:
            --> if condition in line 40 changed, only 'shooting' is required now
            --> DynamicalSystem object DYN removed from input argument of AM.fun_Jac_wrapper (line 42)
        - initial_slope:
            --> if condition in line 12 changed, only 'shooting' is required now
            --> DynamicalSystem object DYN removed from input argument of AM.fun_Jac_wrapper_init (line 13)
        - m_continuation:
            --> if condition in line 78 changed, only 'shooting' is required now
            --> DynamicalSystem object DYN removed from input argument of AM.fun_Jac_wrapper (line 82)
            --> Tolerance for checkGradients function adapted to 1e-5 (line 125)

    @AM_PS_FDM:
        - getIC:
            --> Method overall slightly improved. Some variables renamed and time vector for evaluation adapted

    @AM_PS_FGM:
        - getIC:
            --> Method overall slightly improved. Some variables renamed and time vector for evaluation adapted

    @AM_PS_SHM:
        - AM_PS_SHM:
            --> Property y_old added (line 11)
            --> DynamicalSystem object DYN added to input arguments of method IF_up_res_data (line 39)
            --> Methods SHM_fun and SHM_auto_fun removed (former lines 41 and 42)
            --> Methods PS_SHM_residuum, fun_Jac_wrapper and fun_Jac_wrapper_init added (lines 43 - 45)
        - fun_Jac_wrapper:
            --> Completely added. This function builds the complete Jacobian including the subspace constraint 
        - fun_Jac_wrapper_init:
            --> Completely added. This function builds the complete Jacobian including the subspace constraint 
        - IF_up_res_data:
            --> DynamicalSystem object DYN added to input arguments to fit the existing calls in m_continuation and bifurcation_stability (line 4)
        - PS_SHM_residuum:
            --> Completely added. This residuum function units the code from SHM_auto_fun and SHM_fun and calculates the Jacobian
        - SHM_auto_fun:
            --> Removed. Replaced by PS_SHM_residuum
        - SHM_fun:
            --> Removed. Replaced by PS_SHM_residuum

    @AM_QPS_SHM:
        - AM_QPS_SHM:
            --> DynamicalSystem object DYN removed from input arguments of methods fun_Jac_wrapper and fun_Jac_wrapper_init (lines 70 and 71)
        - fun_Jac_wrapper:
            --> DynamicalSystem object DYN completely removed from the method (lines 19, 23, 29 and 30)
        - fun_Jac_wrapper_init:
            --> DynamicalSystem object DYN completely removed from the method (lines 18, 22 and 28)

    @ApproxMethod:
        - s_method_selection:
            --> if conditions for periodic shooting removed (former lines 18 - 22) and residuum method updated to PS_SHM_residuum (line 18)
            --> @(y,DYN) changed to @(y) for quasiperiodic shooting (lines 43, 45 and 47)

    @ST_PS_SHM:
        - PS_SHM_calc_stability:
            --> Completely added. This residuum function units the code from PS_SHM_calc_stability_auto and PS_SHM_calc_stability_non_auto
        - PS_SHM_calc_stability_auto:
            --> Removed. Replaced by PS_SHM_calc_stability
        - PS_SHM_calc_stability_non_auto:
            --> Removed. Replaced by PS_SHM_calc_stability
        - PS_SHM_ST_residuum:
            --> Completely added. This residuum function units the code from SHM_auto_fun and SHM_fun and calculates the Jacobian
        - SHM_auto_fun:
            --> Removed. Replaced by PS_SHM_ST_residuum
        - SHM_fun:
            --> Removed. Replaced by PS_SHM_ST_residuum
        - ST_PS_SHM:
            --> fsolve options adapted. 'MaxFunctionEvaluations' removed and 'SpecifyObjectiveGradient' with value true added (line 13)
            --> Methods PS_SHM_calc_stability_auto, PS_SHM_calc_stability_non_auto, SHM_fun and SHM_auto_fun removed (former lines 42 and 46)
            --> Methods PS_SHM_calc_stability and PS_SHM_ST_residuum added (lines 42 and 43)

    @Stability:
        - s_stability_selection:
            --> if conditions for periodic shooting removed (former lines 27 - 31) and stability method updated to PS_SHM_calc_stability (line 26)
        
    Functions:
        - initial_solution:
            --> if condition in line 24 changed, only 'shooting' is required now
            --> DynamicalSystem object DYN removed from input argument of AM.fun_Jac_wrapper_init (line 25)
            --> Tolerance for checkGradients function adapted to 1e-5 (line 53)

    test:
        - test_FDM_PS_vdP:
            --> Stability computation enabled (line 22)
        - test_SHM_PS_duffing:
            --> Parameters and mu_limit changed, they are now identical to FDM and FDM test files (lines 8, 9 and 13)
            --> Single solution: stability computation disabled (line 23)
            --> Continuation: step control settings adapted (line 40)
            --> Commented code for some postprocessing replaced by code (commented) to compare Floquet multipliers (lines 49 - 81)
        - test_SHM_PS_vdP:
            --> Parameters and options changed. Instable limit cycle is now computed (lines 9, 12, 19, 21, 35 and 36)
            --> Commented code for some postprocessing replaced by code (commented) to compare Floquet multipliers (lines 44 - 66)
          

----------  

Bugfixes:

    @AM_PS_SHM:
        - getIV:
            --> Method overall improved and wrong code lines regarding the param array and continuation parameter removed

    @SOL_PS_SHM:
        - evalsol_hypertime:
            --> Complete overhaul of method in order to work reliable for instable solutions by taking the multiple shooting solutions into account 
            --> Former single time integration (+ starting integration) replaced by n_shoot time integrations to get the solution data for one period
            --> The solution data is then obtained by evaluating the spline on the interval [0,T)



--------------------------------------------
------------------ v3.0.3 ------------------
--------------------------------------------

Stability computation added for quasi-periodic solutions approximated by Finite Difference Method or Fourier-Galerkin Method.
Similar to stability computation of periodic solutions, a converged solution is "reshooted" using the quasi-periodic shooting method ...
to obtain the mapping matrices from the Jacobian of the shooting algorithm.
Moreover, it is now possible to define the number of characteristics for reshooting a solution (this is also possible when shooting ...
is already used as approximation method) and the number of mappings to calculate the Ljapunov exponents.

    @Continuation:
        - m_continuation:
            --> Setting of AM.y_old removed (former line 81)

    @DynamicalSystem:
        - s_DYN_gatekeeper:
            --> Restriction removed that stability computation of quasi-periodic solutions is only allowed when using shooting method (former lines 222 - 229)

    @AM_QPS_FDM:
        - AM_QPS_FDM:
            --> Method getIC activated and input arguments updated (line 85)
        - getIC:
            --> Completely added. Method extracts the initial values that are needed to reshoot the solution when stability computation is desired

    @AM_QPS_FGM:
        - AM_QPS_FGM:
            --> Method getIC added (line 147)
        - getIC:
            --> Completely added. Method extracts the initial values that are needed to reshoot the solution when stability computation is desired

    @AM_QPS_SHM:
        - AM_QPS_SHM:
            --> Properties y_old and phase_shift removed (former lines 20 and 27 - 29)
            --> Input arguments of method IF_up_res_data adapted (line 58)
            --> Method getIC added (line 60)
        - getIC:
            --> Completely added. Method interpolates the solution vector (i.e. the initial values for the shooting) when n_char ~= n_char_st
        - getIV:
            --> Bug fixed when initial value is created from a Fourier series (lines 115 - 124)
        - IF_up_res_data:
            --> Second input argument now depends on which object calls the method. If...else added to distiguish both cases (lines 12 - 20)
            --> Variable p_y0_old removed (former lines 23 and 52) and replaced by y_old (lines 32, 34, 35, 60, 62 and 63)
        - s_QPS_SHM_gatekeeper:
            --> Check for field 'n_char' moved to lines 37 - 47. Added check that it is an integer > 0 (lines 40 - 45)
            --> Check for field 'solver' moved to lines 31 - 35

    @SOL_PS_FDM:
        - SOL_PS_FDM:
            --> Changed saving of CON.newton_flag_bfp from NaN to actual value (line 104)

    @SOL_PS_FGM:
        - SOL_PS_FGM:
            --> Changed saving of CON.newton_flag_bfp from NaN to actual value (line 126) 
            --> CON.p_error_bfp is now only saved when error control is enabled (lines 131 - 133)

    @SOL_PS_SHM:
        - SOL_PS_SHM:
            --> Jacobian is now saved as sparse matrix (lines 29, 54 and 80)
            --> Changed saving of CON.newton_flag_bfp from NaN to actual value (line 82) 

    @SOL_QPS_FDM:
        - SOL_QPS_FDM:
            --> Save of bifurcation point activated (lines 102 - 127)

    @SOL_QPS_FGM:
        - SOL_QPS_FGM:
            --> Save of stability properties added (lines 49 - 55 and 89 - 95)
            --> Save of bifurcation point added (lines 108 - 139)

    @SOL_QPS_SHM:
        - SOL_QPS_SHM:
            --> Jacobian is now saved as sparse matrix (lines 30, 58 and 84)
            --> Changed saving of CON.newton_flag_bfp from NaN to actual value (line 86) 

    @ST_PS_SHM:
        - PS_SHM_calc_stability:
            --> Preallocation of Jacobian corrected (line 45)
        - ST_PS_SHM:
            --> 'MaxIter' in property fsolve_opts changed to 50 (line 13)
            --> Function call of updateoptions in constructor moved from line 30 to 38
        
    @ST_QPS_SHM:
        - jacobi_int:
            --> Reshape of y corrected (line 23)
            --> Reshape of Z0 in line 25 removed
        - qp_SHM_ST_auto_fun:
            --> Completely added. This is the residuum function to reshoot a solution of a fully autonomous system
        - qp_SHM_ST_mixed_fun:
            --> Completely added. This is the residuum function to reshoot a solution of a partly autonomous system
        - qp_SHM_ST_non_auto_fun:
            --> Completely added. This is the residuum function to reshoot a solution of a fully non-autonomous system
        - QPS_SHM_calc_stability:
            --> Parameter definitions adapted (lines 18 - 24) and variable names changed accordingly
            --> Reshooting of a solution added if approximation method is FDM or FGM or if n_char ~= n_char_st (lines 29 - 55)
            --> Derivative dZ0~/dZ0 activated (lines 87 and 94)
            --> Variables multipliers and n_unstable added to second catch statement (lines 160 and 161)
        - s_help_opt_stability_QPS_SHM:
            --> Method restructured
            --> Help text added for 'n_char_st' and 'n_map' (lines 18 - 23)
        - s_ST_QPS_SHM_gatekeeper:
            --> 'n_char_st' and 'n_map' added to allowed fieldnames (line 17)
            --> Checks for 'n_char_st' and 'n_map' added (lines 47 - 67)
        - ST_QPS_SHM:
            --> Properties n_char_st = 100, n_map = 2e4, QPS_SHM_ST_residuum and AM_ST added (lines 9, 10, 21 and 22)
            --> 'MaxIter' changed to 50 and 'SpecifyObjectiveGradient' = 'true' added to property fsolve_opts (line 13)
            --> Overhaul of constructor: 
                    * Resetting of default value of 'solver' moved to lines 32 - 38
                    * Resetting of default value of n_char_st added (lines 40 - 45)
                    * Add
            --> Methods qp_SHM_ST_auto_fun, qp_SHM_ST_mixed_fun and qp_SHM_ST_non_auto_fun added (lines 73 - 77)


    @Stability:
        - check_stability_values:
            --> Setting of variable vectors improved (line 17)
        - s_stability_selection:
            --> if...else removed for quasi-periodic solutions (lines 40 and 48 - 52). Now ST_QPS_SHM is always used (lines 40 - 42)

    Functions:
        - initial_solution:
            --> 'MaxIter' added to fsolve options. Value set to 1e3 and redefined to 50 for shooting (lines 21 and 25)

    test:
        --> Stability computation enabled and/or options added in test files for quasi-periodic solutions. Changes affect:
        - test_FDM_QPS_cvdP (line 31)
        - test_FDM_QPS_duffing (lines 46 and 53)
        - test_FDM_QPS_laval (lines 34 and 40)
        - test_FDM_QPS_vdP (lines 28, 36, 96 and 104)
        - test_FGM_QPS_cvdP (lines 27 and 31)
        - test_FGM_QPS_duffing (lines 46 and 51)
        - test_FGM_QPS_laval (lines 29 and 33)
        - test_SHM_QPS_cvdP (lines 40 and 55)
        - test_SHM_QPS_duffing (lines 40 and 43)
        - test_SHM_QPS_vdP (line 36)
